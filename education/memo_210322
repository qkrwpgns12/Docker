=================================================================
[ 가상 네트워크 설정 ]

virsh net-destory default
virsh net-edit default

<network>
  <name>default</name>
  <uuid>6e0c494d-cc58-4137-8acd-79c0c3f31ce8</uuid>
  <forward mode='nat'/>
  <bridge name='virbr0' stp='on' delay='0'/>
  <mac address='52:54:00:e8:ec:1e'/>
  <ip address='10.100.0.254' netmask='255.255.255.0'>
    <dhcp>
      <range start='10.100.0.100' end='10.100.0.200'/>
    </dhcp>
  </ip>
</network>

virsh net-start default

==================================================================
[ 가상머신 생성]

virt-manager

4096MB, 2core, start with host boot, nic rtl [docker, node1]

==================================================================
[ SSH ]

ssh-keygen
ssh-copy-id docker
ssh-copy-id node1

/etc/hosts에 이미 등록되어 있음

==================================================================
Cloud vs Cloud Native

==================================================================
[ chroot ]

mkdir /root/dir1
chroot /root/dir1
mkdir /root/dir1/bin
mkdir /root/dir1/lib64

ldd /bin/bash

cp /lib64/libtinfo.so.5 /lib64/libdl.so.2 /lib64/libc.so.6 /lib64/ld-linux-x86-64.so.2 dir1/lib64/

cp /bin/date /root/dir1/bin

chroot /root/dir1
date
ls

===================================================================
docker community edition의 Enterprise버전은 이미지 수정기능이 더 잘되어있지만
굳이 그것을 쓸 필요도 없다.

그래서 community version에는 redhat이 빠져있는 것.

===================================================================
[ Docker install ]

https://docs.docker.com/engine/install/centos/

yum install -y yum-utils
yum-config-manager --add-repo https://download.docker.com/linux/centos/docker-ce.repo
yum install docker-ce docker-ce-cli containerd.io
systemctl start docker
systemctl enable docker

===================================================================
root계정이 아닌 일반계정 guru를 통해 docker 명령을 실행하려고하면
/var/run/docker.sock에 대한 권한이 없어서 실행 불가능.

ll /var/run/docker.sock은 docker 그룹에 대해서는 rw권한을 가진다.
따라서 guru를 docker 그룹에 추가하면 docker 명령을 실행 할 수 있다.

guru 유저에게 daemon control socket에 접근 권한을 주는 것.

===================================================================
docker info에 다른 모든것을 바꿀 수 있지만,
Registry는 수정 불가.
enterprise버전에서는 레드햇 관련해서 URL이 하나 더 붙는다.

Insecure Registries: 를 통해 인증서 없이 접속 허용할 대역 지정 가능
Live Restore Enabled 수정을 통해 라이브 업데이트 가능여부 설정 가능

dockerd를 통해 수정이 가능하지만
/etc/docker/daemon.json 파일을 통해 추가로 옵션을 넣어 줄 수 있다.
ex) vi /etc/docker/daemon.json
{
  "insecure-registries": ["10.100.0.0/24"]
}

자세한 파라미터들은 docs.docker.com 에서 dockerd 검색 후 참고

===================================================================
docker 사용자는 docker를 관리하는 것이지, root가 관리하는 docker 디렉터리를
접근할 수 있는 권한은 없다.
docker 사용자는 root가 아니기 때문.

ex) /var/lib/docker
    root는 해당 디렉터리를 접근할 수 있지만,
    guru는 해당 디렉터리에는 접근할 수 없다.

===================================================================
[ docker architecture ]

docker image는 구조는 overlay2, 보여주는것은 UFS로(하나의 레이어처럼)

docker contrainer와 관련된 파일은 /var/lib/docker 하위폴더에 생성되며,

docker pull nginx:1.14
// 컨테이너 생성시 containers에 UUID로 생성,
   overlay2에 레이어 정보가 생성된다.

docker create --name web nginx:1.14
docker ps -a
docker start web
docker ps

curl 172.17.0.2
// ip a 에서는 172.17.0.1 인데, 왜 0.2인가??

====================================================================

요약
1. docker 설치
2. docker 어드민 유저 guru에 docker socket 접근권한 부여
3. docker info에서 볼 수 있는 정보 수정 방법 및 수정
4. docker HOST 구성 및 외부접근 허용
5. docker container 아키텍쳐
